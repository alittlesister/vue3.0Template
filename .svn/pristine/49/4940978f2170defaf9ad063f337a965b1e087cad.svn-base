<template>
  <input class="w-full table-input mr-10" placeholder="请输入数据" :value="defaultValue" @focus="hangdleValue($event)" @blur="confirmEdit" @input="hangdleValue($event)" />
</template>
<script lang="ts">
  interface Props {
    defaultValue: any,
    tagName:String,
    obj:Object
  }
import {  EventEmitter } from "../interface/event";
  import { ref,defineComponent, Ref } from 'vue'

  export default defineComponent({
    props: {
      defaultValue: {
        type: String||Number
      },
      obj:{
        type:Object
      },
      tagName:{
        type:String
      }
    },
    setup(props: Props, ctx) {
      let val: string = ''
      let isEdit: Ref<boolean> = ref(false)
      const changeEditState = () => {
        isEdit.value = !isEdit.value
      }

      const confirmEdit = () => {
        props.defaultValue = val;
        ctx.emit("update:defaultValue",val,props.tagName,props.obj);
        changeEditState()
      }

      const hangdleValue = (e:EventEmitter) => {
        val = e.target.value
      }

      return {
        changeEditState,
        confirmEdit,
        hangdleValue,
        isEdit
      }
    }
  })
</script>
<style lang="scss" scoped>
.table-input{
  height: 36px;
  padding-left: 10px;
  color: #606266;
border-radius: 4px;
}
.table-input:hover,.table-input:focus{
  outline:0;
  border:1px solid #409EFF;
  box-shadow: 0 0 4px rgba(64, 158, 255, 0.4);
}
</style>