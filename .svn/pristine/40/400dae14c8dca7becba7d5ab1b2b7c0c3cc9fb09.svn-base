<template>
  <div class="toggle-section mt-32">
    <div class="flex flex-nowrap justify-between items-center">
      <div class="title-style flex flex-row flex-nowrap justify-between items-center">
        <div class="text-standard text-normal text-checked">
          {{ title }}
        </div>
        <div class="ml-20 text-blue text-sm" @click="toggleContentFunc">
          {{ isToggle ? '收起' : '展开' }}
          <i
            class="text-blue text-sm"
            :class="isToggle ? 'el-icon-arrow-down' : 'el-icon-arrow-up'"
          ></i>
        </div>
      </div>
      <div>
        <slot name="action"></slot>
      </div>
    </div>
    <div
      ref="sectionContent"
      class="section-content overflow-hidden mt-20"
      :style="{ height: sectionHeight }"
    >
      <slot name="content"></slot>
    </div>
  </div>
</template>
<script lang="ts">
  import { ref, defineComponent, Ref, computed, getCurrentInstance } from 'vue'
  export default defineComponent({
    props: {
      title: {
        type: String
      }
    },
    setup() {
      const { proxy }: any = getCurrentInstance()
      let isToggle = ref(false)
      let sectionContent: Ref = ref(null)
      let height: Ref = ref(0)
      const sectionHeight = computed(() => {
          isToggle.value && sectionContent.value
            ? (height.value = sectionContent.value.scrollHeight + 'px')
            : (height.value = 0)
          return height.value
      })

      const toggleContentFunc = () => {
        isToggle.value = !isToggle.value
      }
      return {
        isToggle,
        toggleContentFunc,
        sectionContent,
        sectionHeight
      }
    }
  })
</script>
<style lang="scss" scoped>
  @import '../style/common.scss';
  // .toggle-section {
  // }
  .section-content {
    transition: height 0.5s;
  }
  .title-style {
    > div:first-child {
      position: relative;
      font-weight: 500;
      padding-left: 10px;
    }
    > div:first-child:before {
      content: '';
      position: absolute;
      top: 50%;
      left: 0;
      width: 3px;
      height: 20px;
      border-radius: 2px;
      background: $sideCheckedColor;
      transform: translateY(-50%);
    }
  }
</style>
